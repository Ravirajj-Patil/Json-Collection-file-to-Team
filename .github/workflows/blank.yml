# This is a basic workflow to help you get started with Actions

name: API_Automation_for_Edutinker_Login(Host_Check)

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  REPORT_DIR: "newman-reports"
  COLLECTION_PATH: "#Edutinker_Login.postman_collection"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  run-api-tests:
  
    # The type of runner that the job will run on
    name: üöÄ Run Postman API Tests
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # step-1 Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name : üì• Checkout Code
        uses: actions/checkout@v4

      # Step 2: Setup Node.js (for Newman)
      - name: ‚öôÔ∏è Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      # -------------------------
      # Step 3: Install Newman & Reporters
      # -------------------------
      - name: üì¶ Install Dependencies
        run: |
          npm install -g newman newman-reporter-htmlextra
          
      # 4Ô∏è‚É£ Run API Tests (Collection contains all host/login info)
      - name: üß™ Run Postman Tests
        run: |
          echo "Running Postman tests from collection..."
          mkdir -p $REPORT_DIR
          newman run $COLLECTION_PATH \
            --timeout 180000 \
            --reporters cli,htmlextra \
            --reporter-htmlextra-export "$REPORT_DIR/API-Test-Report.html" \
            --reporter-htmlextra-title "Edutinker API Automation Report" \
            --bail
          echo "‚úÖ Postman tests completed."

      # 5Ô∏è‚É£ Upload Test Report
      - name: üìä Upload Newman HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: API-Test-Report
          path: ${{ env.REPORT_DIR }}/API-Test-Report.html

      # 6Ô∏è‚É£ Optional Notifications
      - name: ‚úÖ Notify on Success
        if: success()
        run: echo "üéâ All API tests passed successfully!"

      - name: ‚ùå Notify on Failure
        if: failure()
        run: echo "‚ö†Ô∏è One or more API tests failed. Please review the Newman report."
